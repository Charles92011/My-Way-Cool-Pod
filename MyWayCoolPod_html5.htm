<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <title>My Way Cool Pod</title>
        <meta name="author" content="charles.johnson@civi.com" />
    </head>

    <body>
		<p>
			<input type="text" id="txtMessageOut" /><button id="btnSend">Send</button>
		</p>
		<p>
			<button id="btnGetConfig">GetConfig</button>
		</p>
		<p><span id="spanLog">log...</span></p>

		<script type="application/javascript" src="lib/connect_customPodSDK.js"></script>
		<script type="application/javascript">

			log('Starting My Way Cool Pod');

			const syncConnector = ConnectCustomSDK.SyncConnector || {};

			if (syncConnector) {
				syncConnector.init(onConfigured, "com.example.mywaycoolpod", "9.5.001", "connectsdkhook");
			}

			function onConfigured() {

				const btnSend = document.getElementById('btnSend');
				btnSend.addEventListener('click', sendMessage);
				document.getElementById('btnGetConfig').addEventListener('click', getConfig);
				
				
				
				syncConnector.registerCallback('syncMessageReceived', syncMessageReceived);
				syncConnector.registerCallback("userJoined", userJoined); 
				syncConnector.registerCallback("userLeft", userLeft); 
				syncConnector.registerCallback("userDetailsChanged", userDetailsChanged); 
				syncConnector.registerCallback("userStatusChanged", userStatusChanged); 
				syncConnector.registerCallback("roleChanged", roleChanged); 
				syncConnector.registerCallback("caughtUp",caughtUp); 
				syncConnector.registerCallback("update", breakOutSession);

				syncConnector.allowParticipantPublish("message", true);

				log("My Way Cool Pod is ready.");
			};

			function getConfig(event) {
			
				const config = syncConnector.getConfig();
			
				log(JSON.stringify(config));
			
			}




			function sendMessage(event) {
			
				const txtMessageOut = document.getElementById('txtMessageOut');
				const messageOut = txtMessageOut.value;

				log('Sending Message: ' + messageOut);
				syncConnector.dispatchSyncMessage('message', messageOut, false, false);
			}

			function log(message) {
				const spanLog = document.getElementById('spanLog');
				spanLog.innerHTML = spanLog.innerHTML + ('<br/>' + message);
			}
			
			function syncMessageReceived(event) {

				if (event.msgNm == "message") {
					log('Message Received:' + event.msgVal);
				}
			}
			
			function userJoined(event) {
				log('User Joined');
				log(JSON.stringify(event));
			}
			function userLeft(event) {log('User Left');}
			function userDetailsChanged(event) {log('User Details Changed');}
			function userStatusChanged(event) {log('User Status Changed');}
			function roleChanged(event) {log('Role Changed');}
			function caughtUp(event) {log('Caught Up');}
			function breakOutSession(event) {log('Break Out Session');}
			

		</script>
    </body>
</html>
